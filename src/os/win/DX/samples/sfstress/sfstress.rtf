{\rtf1\ansi\ansicpg1252\uc1 \deff9\deflang1033\deflangfe1033{\fonttbl{\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f9\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Helv{\*\falt Arial};}}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;
\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}{\stylesheet{\nowidctlpar\widctlpar\adjustright \f9\fs20 \snext0 Normal;}{\s1\sb60\sa120\nowidctlpar\widctlpar\adjustright \b\f9\fs28 
\sbasedon0 \snext0 heading 1;}{\s2\li360\ri360\sb120\nowidctlpar\widctlpar\adjustright \b\f9 \sbasedon0 \snext0 heading 2;}{\s3\sb240\sa60\keepn\nowidctlpar\widctlpar\adjustright \b\f9 \sbasedon0 \snext0 heading 3;}{
\s4\li360\nowidctlpar\widctlpar\adjustright \f9\ul \sbasedon0 \snext0 heading 4;}{\s5\sb240\sa60\nowidctlpar\widctlpar\adjustright \f9\fs22 \sbasedon0 \snext0 heading 5;}{\s6\sb240\sa60\nowidctlpar\widctlpar\adjustright \i\f9\fs22 \sbasedon0 \snext0 
heading 6;}{\s7\sb240\sa60\nowidctlpar\widctlpar\adjustright \f9\fs20 \sbasedon0 \snext0 heading 7;}{\s8\sb240\sa60\nowidctlpar\widctlpar\adjustright \i\f9\fs20 \sbasedon0 \snext0 heading 8;}{\s9\sb240\sa60\nowidctlpar\widctlpar\adjustright \i\f9\fs18 
\sbasedon0 \snext0 heading 9;}{\*\cs10 \additive Default Paragraph Font;}{\s15\li360\ri360\nowidctlpar\widctlpar\adjustright \f9\fs20 \sbasedon0 \snext15 Topic Text;}{\s16\li360\sb120\nowidctlpar\widctlpar\adjustright \b\f9 \sbasedon0 \snext15 
Topic Heading;}{\s17\li180\nowidctlpar\widctlpar\adjustright \b\f9\fs28 \sbasedon0 \snext16 Topic Caption;}{\s18\fi-360\li720\ri360\nowidctlpar\widctlpar\adjustright \f9\fs20 \sbasedon15 \snext18 Topic Text Item;}{
\s19\li720\ri720\nowidctlpar\widctlpar\adjustright \f9\fs20 \sbasedon15 \snext19 Topic Text Indent;}{\s20\li720\nowidctlpar\widctlpar\adjustright \f9\fs20 \sbasedon0 \snext20 Normal Indent;}{\s21\nowidctlpar\widctlpar\adjustright \f9\fs20 
\sbasedon0 \snext21 footnote text;}}{\info{\title # $ Basics}{\author John Feith}{\operator Jason VandeKieft}{\creatim\yr1997\mo7\dy11\hr15\min50}{\revtim\yr1999\mo1\dy27\hr12\min52}{\version4}{\edmins0}{\nofpages8}{\nofwords601}{\nofchars3431}
{\*\company Sonic Foundry, Inc.}{\nofcharsws0}{\vern71}}\widowctrl\ftnbj\aenddoc\noextrasprl\prcolbl\cvmme\sprsspbf\brkfrm\swpbdr\hyphcaps0\fracwidth\viewkind4\viewscale100 \fet0\sectd \linex0\endnhere\sectdefaultcl {\*\pnseclvl1
\pnucrm\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang{\pntxta )}}{\*\pnseclvl5
\pndec\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang
{\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}\pard\plain \s1\sb60\sa120\nowidctlpar\widctlpar\outlinelevel0\adjustright \b\f9\fs28 {\fs24\super #{\footnote \pard\plain 
\s21\nowidctlpar\widctlpar\adjustright \f9\fs20 {\super #}{ IDH_CONTENTS}}}{\fs24  }{\fs24\super ${\footnote \pard\plain \s21\nowidctlpar\widctlpar\adjustright \f9\fs20 {\super $}{ Contents}}}{\fs24  }{\fs24\super +{\footnote \pard\plain 
\s21\nowidctlpar\widctlpar\adjustright \f9\fs20 {\super +}{ 0000}}}{\fs24  Contents
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f9\fs20 {Sonic Foundry Stress Plug-In (an example DirectX Audio Plug-In)
\par 
\par }\pard \li720\nowidctlpar\widctlpar\adjustright {\uldb\cf11 Overview}{\v IDH_OVERVIEW}{ 
\par }{\uldb\cf11 Dry Out}{\v IDH_DRYOUT}{ 
\par }{\uldb\cf11 Wet Out}{\v IDH_WETOUT}{ 
\par }{\uldb\cf11 Echo Delay}{\v IDH_DELAY}{ 
\par }{\uldb\cf11 Buffer Size}{\v IDH_BUFFER}{
\par }{\uldb\cf11 Load}{\v IDH_LOAD}{
\par }{\uldb\cf11 Preset Size}{\v IDH_PRESET\tab }{
\par }\pard \nowidctlpar\widctlpar\adjustright {
\par }{This plug-in is for demonstration purposes only and does not represent the quality of Sonic Foundry\rquote s commercial products.
\par 
\par This plug-in is provided as an example in the Sonic Foundry Plug-In Development Kit (PIDK). The PIDK is a supplement to the Microsoft DirectX Media SDK that utilizes the Microsoft DirectShow API.  The PIDK is available free of charge on Sonic Foundry
\rquote s web site (www.sonicfoundry.com).
\par 
\par Copyright \'a9 1996-1999 Sonic Foundry, Inc. All rights reserved.
\par 
\par Help file last modified: January 2}{7}{, 1999.}{
\par }\pard\plain \s1\sb60\sa120\nowidctlpar\widctlpar\outlinelevel0\adjustright \b\f9\fs28 {\page }{\fs24\super #{\footnote \pard\plain \s21\nowidctlpar\widctlpar\adjustright \f9\fs20 {\super #}{ IDH_OVERVIEW}}}{\fs24  }{\fs24\super ${\footnote \pard\plain 
\s21\nowidctlpar\widctlpar\adjustright \f9\fs20 {\super $}{ Overview}}}{\fs24  }{\fs24\super K{\footnote \pard\plain \s21\nowidctlpar\widctlpar\adjustright \f9\fs20 {\super K}{ Overview}}}{\fs24  }{\fs24\super +{\footnote \pard\plain 
\s21\nowidctlpar\widctlpar\adjustright \f9\fs20 {\super +}{ 0001}}}{\fs24  Overview}{
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f9\fs20 {The }{\i Sonic Foundry Stress Plug-In}{ mixes a delayed copy of t
he original waveform back into the waveform. The amount of delay is variable between 1 millisecond and 10 seconds. In addition, the levels for both the unprocessed (dry) and processed (wet) signals are independently adjustable.
\par 
\par The }{\i Sonic Foundry Stress Plug-In }{
was designed to demonstrate stress cases that are common, and should be tested in host environments for compatibility.  Three sliders have been added for this testing. The buffer slider controls the size of the buffer that is required to be full befo
re processing can start.  This simulates FFT or windowing based effects that require a given amount of data to be processed in a chunk that is larger than is normally delivered.  Similarly, it packages the output into a buffer (in this case the same size 
a
s the input) and begins delivering data, utilizing as much of the output buffer as possible. The load slider simulates intensive processing.  This will simply control the computational intensity that is done per sample during the actually signal processin
g algorithm. 
\par 
\par The preset slider emulates large presets and more importantly presets that do not remain constant.  It is fairly common to find environments that will not store a large preset or will not store presets that change size from one another. Below
 the preset slider are two text boxes.  These boxes will display either FAIL or PASS for both read and write operations.  These boxes detect if a read or write operation was successful, however, it is not a guarantee that the presets work properly.  Altho
ugh the preset has read from or written to the persist stream, it is completely feasibly for some other aspect to negate a completely successfully read or write. 
\par 
\par SFStress should also be used to test host applications for support and functionality of multi
ple property pages.  SFStress has three property pages.  The first property page is simply a sum of the second and third pages.  The second page gives you signal processing controls similar to SFEcho, while the third page is of more importance while testi
ng stress situations. All pages should be functional during real-time processing.
\par 
\par This SFStress example merely attempts to show some stress case situations that an environment should be able to support. It was also designed to suggest a method at which to 
handle tail data in a large windowing manner. It should be regard as nothing more.  This program has had no optimizations in order to keep things readable and easy to understand.  This lack of optimizations may cause minor glitching but this can be expect
ed at the level at which this program was designed.  It should be extremely obvious why the program functions as it does.
\par }\pard\plain \s1\sb60\sa120\nowidctlpar\widctlpar\outlinelevel0\adjustright \b\f9\fs28 {\page }{\fs24\super #{\footnote \pard\plain \s21\nowidctlpar\widctlpar\adjustright \f9\fs20 {\super #}{ IDH_DRYOUT}}}{\fs24  }{\fs24\super ${\footnote \pard\plain 
\s21\nowidctlpar\widctlpar\adjustright \f9\fs20 {\super $}{ Dry Out Level}}}{\fs24  }{\fs24\super K{\footnote \pard\plain \s21\nowidctlpar\widctlpar\adjustright \f9\fs20 {\super K}{ Dry; Level}}}{\fs24  }{\fs24\super +{\footnote \pard\plain 
\s21\nowidctlpar\widctlpar\adjustright \f9\fs20 {\super +}{ 0002}}}{\fs24  Dry Out}{
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f9\fs20 {\fs16 Controls the amount of unprocessed signal to mix into the output. If this value is set to -Inf. then only the processed (wet) signal is mixed into the output.
\par 
\par Range: -Inf. to 20 dB
\par }\pard\plain \s1\sb60\sa120\nowidctlpar\widctlpar\outlinelevel0\adjustright \b\f9\fs28 {\page }{\fs24\super #{\footnote \pard\plain \s21\nowidctlpar\widctlpar\adjustright \f9\fs20 {\super #}{ IDH_WETOUT}}}{\fs24  }{\fs24\super ${\footnote \pard\plain 
\s21\nowidctlpar\widctlpar\adjustright \f9\fs20 {\super $}{ Wet Out Level}}}{\fs24  }{\fs24\super K{\footnote \pard\plain \s21\nowidctlpar\widctlpar\adjustright \f9\fs20 {\super K}{ Wet; Level}}}{\fs24  }{\fs24\super +{\footnote \pard\plain 
\s21\nowidctlpar\widctlpar\adjustright \f9\fs20 {\super +}{ 0003}}}{\fs24  Wet Out}{
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f9\fs20 {\fs16 Controls the amount of processed (delayed) signal to mix into the output. If this value is set to -Inf. then only the unprocessed (dry) signal is mixed into the output.
\par 
\par Range: -Inf. to 20 dB
\par }\pard\plain \s1\sb60\sa120\nowidctlpar\widctlpar\outlinelevel0\adjustright \b\f9\fs28 {\page }{\fs24\super #{\footnote \pard\plain \s21\nowidctlpar\widctlpar\adjustright \f9\fs20 {\super #}{ IDH_DELAY}}}{\fs24  }{\fs24\super ${\footnote \pard\plain 
\s21\nowidctlpar\widctlpar\adjustright \f9\fs20 {\super $}{ Echo Delay}}}{\fs24  }{\fs24\super K{\footnote \pard\plain \s21\nowidctlpar\widctlpar\adjustright \f9\fs20 {\super K}{ Delay}}}{\fs24  }{\fs24\super +{\footnote \pard\plain 
\s21\nowidctlpar\widctlpar\adjustright \f9\fs20 {\super +}{ 0004}}}{\fs24  Echo Delay}{
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f9\fs20 {\fs16 Specifies the delay time for the echo.
\par 
\par Range: 1 to 10,000 milliseconds
\par }\pard\plain \s1\sb60\sa120\nowidctlpar\widctlpar\outlinelevel0\adjustright \b\f9\fs28 {\page }{\fs24\super #{\footnote \pard\plain \s21\nowidctlpar\widctlpar\adjustright \f9\fs20 {\super #}{ IDH_BUFFER}}}{\fs24  }{\fs24\super ${\footnote \pard\plain 
\s21\nowidctlpar\widctlpar\adjustright \f9\fs20 {\super $}{ Buffer Size}}}{\fs24  }{\fs24\super K{\footnote \pard\plain \s21\nowidctlpar\widctlpar\adjustright \f9\fs20 {\super K}{ Buffer}}}{\fs24  }{\fs24\super +{\footnote \pard\plain 
\s21\nowidctlpar\widctlpar\adjustright \f9\fs20 {\super +}{ 0005}}}{\fs24  Buffer Size}{
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f9\fs20 {\fs16 Specifies the size of samples required before processing can begin.  A value of 2048  would require 2048 samples to be l
oaded into an input buffer (also the output buffer).  This buffer requirement emulates a FFT or windowing based algorithm.
\par 
\par Range: 16 to 200,000 samples
\par }\pard\plain \s1\sb60\sa120\nowidctlpar\widctlpar\outlinelevel0\adjustright \b\f9\fs28 {\page }{\fs24\super #{\footnote \pard\plain \s21\nowidctlpar\widctlpar\adjustright \f9\fs20 {\super #}{ IDH_LOAD}}}{\fs24  }{\fs24\super ${\footnote \pard\plain 
\s21\nowidctlpar\widctlpar\adjustright \f9\fs20 {\super $}{ Load}}}{\fs24  }{\fs24\super K{\footnote \pard\plain \s21\nowidctlpar\widctlpar\adjustright \f9\fs20 {\super K}{ Load}}}{\fs24  }{\fs24\super +{\footnote \pard\plain 
\s21\nowidctlpar\widctlpar\adjustright \f9\fs20 {\super +}{ 0006}}}{\fs24  Load}{
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f9\fs20 {\fs16 Specifies the computational intensity.  Designed to emulate high processing power effects.
\par 
\par Range: 1 to 500
\par }\pard\plain \s1\sb60\sa120\nowidctlpar\widctlpar\outlinelevel0\adjustright \b\f9\fs28 {\page }{\fs24\super #{\footnote \pard\plain \s21\nowidctlpar\widctlpar\adjustright \f9\fs20 {\super #}{ IDH_PRESET}}}{\fs24  }{\fs24\super ${\footnote \pard\plain 
\s21\nowidctlpar\widctlpar\adjustright \f9\fs20 {\super $}{ Preset Size}}}{\fs24  }{\fs24\super K{\footnote \pard\plain \s21\nowidctlpar\widctlpar\adjustright \f9\fs20 {\super K}{ Preset}}}{\fs24  }{\fs24\super +{\footnote \pard\plain 
\s21\nowidctlpar\widctlpar\adjustright \f9\fs20 {\super +}{ 0007}}}{\fs24  Preset Size}{
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f9\fs20 {\fs16 
Specifies the size of an array that is written out with a preset.  This large array is designed to emulate two important stress cases.  Many environments allow for a small preset only and anything greater so fail gracefully.  Similarly, environments shoul
d not count on each preset to have the same size. 
\par 
\par Range: 0 to 100,000 elements}{
\par }}